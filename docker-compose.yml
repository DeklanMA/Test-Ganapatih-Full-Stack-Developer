services:
  db:
    image: postgres:15
    container_name: newsfeed-db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123
      POSTGRES_DB: newsfeed
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d newsfeed"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend-golang
    container_name: newsfeed-backend
    restart: always
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - ./backend-golang/.env.example
    ports:
      - "8080:8080"
    networks:
      - app-network

  frontend:
    build: ./frontend-next
    container_name: newsfeed-frontend
    restart: always
    depends_on:
      - backend
    env_file:
      - ./frontend-next/.env.example
    ports:
      - "3000:3000"
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
